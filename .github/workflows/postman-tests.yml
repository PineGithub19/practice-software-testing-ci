name: Run Postman Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  postman:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Setup Node.js (for Newman)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # 3. Install Newman + wait-on
      - name: Install Newman
        run: npm install -g newman wait-on

      # 4. Start backend with Docker Compose
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Start backend with Docker
        run: docker compose -f docker-compose.yml up -d
        env:
          SPRINT_FOLDER: sprint5-with-bugs

      # 5. Wait for backend container
      - name: Check containers
        run: docker compose ps

      - name: Wait for backend
        run: npx wait-on http://localhost:8091

      # 6. Install PHP dependencies inside container
      - name: Install PHP dependencies
        run: |
          docker run --rm \
            -v $(pwd)/sprint5-with-bugs:/app \
            composer install --no-interaction --no-progress --no-suggest

      # 7. Create Newman folder
      - name: Create Newman report folder
        run: mkdir -p newman

      # 8. Run Postman collections
      - name: Run Postman API Testing Messages
        run: |
          newman run postman/API_Testing_Messages.json \
            -e postman/API_Testing_env.json \
            -d test_data/d1.json \
            -r cli,json,html \
            --reporter-json-export newman/messages_report.json \
            --reporter-html-export newman/messages_report.html

      - name: Run Postman API Testing Favorites
        run: |
          newman run postman/API_Testing_Favorites.json \
            -e postman/API_Testing_env.json \
            -d test_data/d2.json \
            -r cli,json,html \
            --reporter-json-export newman/favorites_report.json \
            --reporter-html-export newman/favorites_report.html

      - name: Run Postman API Testing Payment
        run: |
          newman run postman/API_Testing_Payment.json \
            -e postman/API_Testing_env.json \
            -d test_data/d3.json \
            -r cli,json,html \
            --reporter-json-export newman/payment_report.json \
            --reporter-html-export newman/payment_report.html

      # 9. Upload test report
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: postman-test-results
          path: newman/*.html
